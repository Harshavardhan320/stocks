package com.stock.calculation.repository;

import java.util.List;
import java.util.Optional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import com.stock.calculation.entitys.Holdings;


@Repository
public interface HoldingesRepository extends JpaRepository<Holdings, Long> {
	
	@Query(value="select * from holdings where stock_name= ?1 and status= 'UNSOLD' and yearmonth_id=?2 "
			+ "and id=(select max(id) from holdings where stock_name=?1)", nativeQuery = true)
	public Optional<Holdings> findByStockNameAndStatusAndMonth(String stockName, long yearMonth);
	
	@Query(value="select * from holdings where id=?1 and stock_name= ?2 and status= 'UNSOLD'", nativeQuery = true)
	public Optional<Holdings> findByIdandName(long id, String name);
	
	@Query(value="select ifnull(sum((total_stocks * current_prise)-invested_amount),0.0) as profit from holdings where yearmonth_id =?1", nativeQuery = true)
	public double findProfitByMonth(long monthid);
	
	@Query(value="select * from holdings where id=?1 and stock_name= ?2 and status= 'UNSOLD' and yearmonth_id=?3", nativeQuery = true)
	public Optional<Holdings> findByIdStockNameAndStatusAndMonth(long id, String stockName, long yearMonth);
	
	
	@Query(value="select ifnull(sum(invested_amount),0.0) from holdings where yearmonth_id =?1", nativeQuery = true)
	public Double totalInvestmentsBymonth(long monthname_id);
	
	@Query(value="select * from holdings where yearmonth_id=?1", nativeQuery = true)
	public List<Holdings> findByYearMonth(long id);
}
